[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "metadata-to-morphsource-compare"
version = "1.0.0"
description = "A tool for researchers to compare specimen metadata with MorphoSource database records"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "MorphoSource Research Team"}
]
keywords = ["morphosource", "bioinformatics", "specimen", "metadata", "comparison"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "pandas>=1.5.0",
    "numpy>=1.23.0",
    "requests>=2.28.0",
    "fuzzywuzzy>=0.18.0",
    "python-Levenshtein>=0.20.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.12.0",
    "ipywidgets>=8.0.0",
    "PyYAML>=6.0.0",
    "openai>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "coverage>=7.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "isort>=5.12.0",
    "bandit>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/johntrue15/Metadata-to-Morphsource-compare"
Documentation = "https://johntrue15.github.io/Metadata-to-Morphsource-compare/"
Repository = "https://github.com/johntrue15/Metadata-to-Morphsource-compare"
Issues = "https://github.com/johntrue15/Metadata-to-Morphsource-compare/issues"

[project.scripts]
morpho = "morpho.cli:main"

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | Tests
  | data
)/
'''

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true
skip = [".git", "__pycache__", "venv", "env", "build", "dist"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_calls = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/env/*",
    "setup.py",
    "*/Tests/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.bandit]
exclude_dirs = ["tests", "Tests", ".venv", "venv"]
skips = ["B101", "B601"]  # assert_used, shell=True

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]
