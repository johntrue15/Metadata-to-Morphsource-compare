name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  lint:
    name: Linting and Formatting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-lint-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-lint-
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black flake8 isort bandit mypy
      
      - name: Check code formatting with Black
        run: |
          black --check --line-length 100 --diff .
        continue-on-error: true
      
      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=15 --max-line-length=100 --statistics
      
      - name: Check import sorting with isort
        run: |
          isort --check-only --profile black --line-length 100 .
        continue-on-error: true
      
      - name: Security check with Bandit
        run: |
          bandit -r . -f json -o bandit-report.json --exit-zero
          bandit -r . --skip B101,B601 --exclude ./tests,./Tests
        continue-on-error: true
      
      - name: Type checking with mypy
        run: |
          mypy --install-types --non-interactive --ignore-missing-imports .
        continue-on-error: true
      
      - name: Summary
        if: always()
        run: |
          echo "## Code Quality Check Results" >> $GITHUB_STEP_SUMMARY
          echo "Python version: ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Linting completed" >> $GITHUB_STEP_SUMMARY
          echo "See job logs for detailed results" >> $GITHUB_STEP_SUMMARY
